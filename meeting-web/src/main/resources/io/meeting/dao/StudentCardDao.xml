<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.meeting.dao.StudentCardDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.meeting.entity.StudentCardEntity" id="studentCardMap">
        <result property="stuno" column="stuNo"/>
        <result property="stuname" column="stuName"/>
        <result property="stucardid" column="stuCardID"/>
        <result property="department" column="department"/>
        <result property="major" column="major"/>
        <result property="gender" column="gender"/>
        <result property="classname" column="className"/>
    </resultMap>

	<select id="queryObject" resultType="io.meeting.entity.StudentCardEntity">
		select * from student_card where stuNo = #{value}
	</select>

	<select id="queryList" resultType="io.meeting.entity.StudentCardEntity">
		select * from student_card
        <where>
            <if test="classname != null and classname.trim() != ''">
                and `classname` like concat('%',#{classname},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by stuNo desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from student_card
         <where>
             <if test="classname != null and classname.trim() != ''">
                 and `classname` like concat('%',#{classname},'%')
             </if>
         </where>
	</select>
	 
	<insert id="save" parameterType="io.meeting.entity.StudentCardEntity">
		insert into student_card
		(
			`stuNo`, 
			`stuName`, 
			`stuCardID`, 
			`department`, 
			`major`, 
			`gender`, 
			`className`
		)
		values
		(
			#{stuno}, 
			#{stuname}, 
			#{stucardid}, 
			#{department}, 
			#{major}, 
			#{gender}, 
			#{classname}
		)
	</insert>
	 
	<update id="update" parameterType="io.meeting.entity.StudentCardEntity">
		update student_card 
		<set>
			<if test="stuname != null">`stuName` = #{stuname}, </if>
			<if test="stucardid != null">`stuCardID` = #{stucardid}, </if>
			<if test="department != null">`department` = #{department}, </if>
			<if test="major != null">`major` = #{major}, </if>
			<if test="gender != null">`gender` = #{gender}, </if>
			<if test="classname != null">`className` = #{classname}</if>
		</set>
		where stuNo = #{stuno}
	</update>
	
	<delete id="delete">
		delete from student_card where stuNo = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from student_card where stuNo in 
		<foreach item="stuno" collection="array" open="(" separator="," close=")">
			#{stuno}
		</foreach>
	</delete>
    <select id="queryObjectBySql" resultType="io.meeting.entity.StudentCardEntity">
		select * from student_card where stuNo = #{value}
	</select>

</mapper>